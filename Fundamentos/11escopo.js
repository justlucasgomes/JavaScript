/*
Escopo Global e Escopo de Bloco em JavaScript
üìå Escopo Global:

Quando uma vari√°vel √© declarada fora de qualquer fun√ß√£o ou bloco {}, ela pertence ao escopo global.

Isso significa que pode ser acessada e modificada de qualquer lugar do c√≥digo.

üìå Escopo de Bloco:

Criado dentro de {} (como em if, for, while, function, etc.).

let e const respeitam o escopo de bloco, ou seja, s√≥ existem dentro do bloco onde foram declaradas.

var n√£o respeita o escopo de bloco e pode vazar para fora dele.
*/

var global = "Estou no escopo global";

function exemplo() {
    let bloco = "Estou dentro de um bloco";
    console.log(global); // ‚úÖ Consegue acessar
    console.log(bloco);  // ‚úÖ Consegue acessar
}

exemplo();
console.log(global); // ‚úÖ Consegue acessar
// console.log(bloco); // ‚ùå Erro! "bloco" n√£o existe fora da fun√ß√£o

{
    var testeVar = "Var escapa do bloco";
    let testeLet = "Let fica preso no bloco";
}

console.log(testeVar); // ‚úÖ Consegue acessar (porque `var` n√£o respeita bloco)
// console.log(testeLet); // ‚ùå Erro! "testeLet" n√£o existe fora do bloco


/*
Resumo R√°pido:
‚úî Vari√°veis var vazam do bloco
‚úî Vari√°veis let e const ficam presas dentro do bloco
‚úî Tudo que est√° no escopo global pode ser acessado de qualquer parte do c√≥digo
*/